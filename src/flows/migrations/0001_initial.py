# Generated by Django 5.2.1 on 2025-06-23 03:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("objects", "0013_defaultobject_alter_objectdb_id_defaultcharacter_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "key",
                    models.CharField(
                        help_text="Unique identifier for the event.",
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="Human-readable label for the event.", max_length=255
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FlowDefinition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="FlowStepDefinition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("set_context_value", "Set Context Value"),
                            ("modify_context_value", "Modify Context Value"),
                            ("evaluate_equals", "Evaluate Equals"),
                            ("evaluate_not_equals", "Evaluate Not Equals"),
                            ("evaluate_less_than", "Evaluate Less Than"),
                            ("evaluate_greater_than", "Evaluate Greater Than"),
                            (
                                "evaluate_less_than_or_equals",
                                "Evaluate Less Than or Equals",
                            ),
                            (
                                "evaluate_greater_than_or_equals",
                                "Evaluate Greater Than or Equals",
                            ),
                            ("call_service_function", "Call Service Function"),
                            ("emit_flow_event", "Emit Flow Event"),
                        ],
                        help_text="The action this step performs.",
                        max_length=50,
                    ),
                ),
                (
                    "variable_name",
                    models.CharField(
                        blank=True,
                        help_text="The key whose meaning depends on the action: for condition steps, the flow variable to evaluate; for service functions, the name of the service function or target context variable.",
                        max_length=255,
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        blank=True,
                        help_text="A JSON object with parameters. For conditions, should include a key 'value' (the value to compare against). For service functions, itâ€™s a mapping of kwargs (and optionally 'result_variable' to store the output).",
                    ),
                ),
                (
                    "flow",
                    models.ForeignKey(
                        help_text="The flow this step belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="flows.flowdefinition",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="The parent step of this step.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="flows.flowstepdefinition",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TriggerDefinition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "base_filter_condition",
                    models.JSONField(
                        blank=True,
                        help_text="Base JSON condition to filter when this trigger is valid.",
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description of the trigger.",
                        null=True,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=0, help_text="Higher priority triggers fire first."
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        db_column="event_id",
                        help_text="The event this trigger listens for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="flows.event",
                    ),
                ),
                (
                    "flow_definition",
                    models.ForeignKey(
                        help_text="The flow to execute when this trigger activates.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="flows.flowdefinition",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Trigger",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "additional_filter_condition",
                    models.JSONField(
                        blank=True,
                        help_text="Optional JSON condition to further refine when this trigger activates.",
                        null=True,
                    ),
                ),
                (
                    "obj",
                    models.ForeignKey(
                        help_text="The object this trigger is associated with.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="triggers",
                        to="objects.objectdb",
                    ),
                ),
                (
                    "trigger_definition",
                    models.ForeignKey(
                        help_text="The trigger template this is based on.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="flows.triggerdefinition",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TriggerData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(help_text="The data key.", max_length=255)),
                ("value", models.TextField(help_text="The data value.")),
                (
                    "trigger",
                    models.ForeignKey(
                        help_text="The specific trigger instance this data is associated with.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data",
                        to="flows.trigger",
                    ),
                ),
            ],
            options={
                "unique_together": {("trigger", "key")},
            },
        ),
    ]
